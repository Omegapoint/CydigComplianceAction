import * as core from '@actions/core';
import * as github from '@actions/github';

export class PentestService {
    public static async getStateOfPentest(pentestDate: { 
        date: string;
        boardsTag: string;
    }): Promise<void> {
        console.log('Running Pentest Controls');
        
        if(!pentestDate.date){
            core.warning("Pentest Date is not set!");
            return;
        }
        core.setOutput("pentestDate", pentestDate.date);

        

        // const token = core.getInput('repo-token');
        // console.log("Got the token");

        // const octokit = github.getOctokit(token);
        // console.log("octoKit authenticated");

        // const { owner, repo } = github.context.repo;
        // console.log(`Owner: ${owner}`);
        // console.log(`Repo: ${repo}`);
        
        // console.log("Going to get branch protection");
        // await octokit.rest.repos.getBranchProtection({
        // owner: owner,
        // repo: repo,
        // branch: 'main',
        // }).then((response) => { 
        //     console.log("Got the branch protection");
        //     console.log(response.data);
        // }).catch((error) => {
        //     core.warning("Error getting branch protection!");
        //     core.warning("Error: ", error.message);
        // });
    }
}